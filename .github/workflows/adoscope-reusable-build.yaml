name: adoscope-reusable-build

on:
  workflow_call:
    inputs:
      buildVersion:
        required: true
        type: string
      dotnetVersion:
        required: true
        type: string
      # repoToken:
      #   required: true
      #   type: string
      commitHash:
        required: false
        type: string
        description: 'Short SHA commit hash to checkout. If not provided, the latest commit will be used.'

env:
  NuGetDirectory: ${{ github.workspace }}/nuget
  NuGetDirectoryWin: ${{ github.workspace }}\nuget

jobs:
  build:
    name: Build, Test and Package
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v1
        with:
          ref: ${{ inputs.commitHash || 'main' }}
        
      - name: Set BuildVersion
        run: |
          $buildVersion = '${{ inputs.buildVersion }}'
          echo "BuildVersion=$buildVersion" | Out-File -FilePath $Env:GITHUB_ENV -Encoding utf8 -Append

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ inputs.dotnetVersion }}

      - name: Restore Dependencies
        working-directory: .
        run: dotnet restore

      - name: Build
        working-directory: .
        run: dotnet build --no-restore --configuration Release

      - name: Run Tests
        working-directory: ./Promethix.Framework.Ado.Tests
        run: dotnet test --no-restore --verbosity normal --filter TestCategory="IntegrationTestsOnCI|Unit"

      - name: Package
        working-directory: .
        run: dotnet pack --no-restore --configuration Release --output ${{ env.NuGetDirectoryWin }}

      - name: Upload Nuget Package Artifact
        uses: actions/upload-artifact@v3
        with:
          name: Promethix.Framework.Ado.NuGet.${{ inputs.buildVersion }}
          if-no-files-found: error
          retention-days: 7
          path: ${{ env.NuGetDirectoryWin }}\*.nupkg

      - name: Add NuGet Source
        working-directory: .
        run: dotnet nuget add source --username gentoorax --password ${{ secrets.REPO_ACCESS_TOKEN }} --store-password-in-clear-text --name github "https://nuget.pkg.github.com/gentoorax/index.json"

      - name: List NuGet sources
        working-directory: .
        run: dotnet nuget list source

      - name: List .nupkg files in directory
        working-directory: .
        run: Get-ChildItem -Path ${{ env.NuGetDirectoryWin }} -Filter *.nupkg

      - name: Push NuGet Package
        working-directory: .
        run: dotnet nuget push "${{ env.NuGetDirectoryWin }}\*.nupkg" --source "github" #--api-key ${{ secrets.REPO_ACCESS_TOKEN }}
        shell: pwsh

    
