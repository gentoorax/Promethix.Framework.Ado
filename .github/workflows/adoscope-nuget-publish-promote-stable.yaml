name: adoscope-nuget-publish-promote-stable
on:
  workflow_dispatch:
    inputs:
      package_version:
        description: 'NuGet package version to approve'
        required: true
        default: '1.0.0-commithash-alpha'
      new_package_version:
        description: 'Promotion version'
        required: true
        default: '1.0.0'

env:
  NuGetDirectory: ${{ github.workspace}}/nuget
  NuGetDirectoryWin: ${{ github.workspace}}\nuget

jobs:
  publish:
    name: Publish Promethix.Framework.Ado
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0 # This is crucial to fetch all history for tagging
        token: ${{ secrets.REPO_ACCESS_TOKEN }}

  extract-commit-hash:
    runs-on: ubuntu-latest
    outputs:
      commit_hash: ${{ steps.set_commit_hash.outputs.commit_hash }}
    steps:
      - name: Extract Commit Hash
        id: set_commit_hash
        env:
          PACKAGE_VERSION: ${{ github.event.inputs.package_version }}
        run: |
          $pattern = '-([0-9a-f]{7,40})-alpha'
          if ($env:PACKAGE_VERSION -match $pattern) {
            $commitHash = $Matches[1]
            echo "commit_hash=$commitHash" >> $GITHUB_ENV
            echo "::set-output name=commit_hash::$commitHash"
          } else {
            Write-Error "Commit hash not found in package version."
            exit 1
          }
        shell: pwsh

  build-package:
    needs: extract-commit-hash
    runs-on: windows-latest
    steps:
      - name: Build and Package
        uses: gentoorax/Promethix.Framework.Ado/.github/workflows/adoscope-reusable-build.yaml@main
        with:
          buildVersion: ${{ github.event.inputs.package_version }}
          dotnetVersion: '7.0.x'
          commitHash: ${{ needs.extract-commit-hash.outputs.commit_hash }}

  tag-commit:
    needs: build-package
    runs-on: ubuntu-latest
    steps:
      - name: Tag Commit Hash
        env:
          NEW_PACKAGE_VERSION: ${{ github.event.inputs.new_package_version }}
          MY_PAT: ${{ secrets.REPO_ACCESS_TOKEN }}
          COMMIT_HASH: ${{ needs.extract-commit-hash.outputs.commit_hash }}
        run: |
          git config user.name 'github-actions'
          git config user.email 'github-actions@github.com'
          # Checkout the commit
          git checkout $env:COMMIT_HASH
          # Tag the commit
          git tag $env:NEW_PACKAGE_VERSION
          # Push the tag: 
          git push origin refs/tags/$env:NEW_PACKAGE_VERSION
          # Push the tag using the PAT and correct repository URL
          $repoUrl = "${{ github.server_url }}/${{ github.repository }}".TrimStart('https://')
          git push "https://github-actions:${env:MY_PAT}@$repoUrl" refs/tags/$env:NEW_PACKAGE_VERSION
        shell: pwsh

